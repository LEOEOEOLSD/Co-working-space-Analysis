USE MID2_PROJECT;

-- 전체 신청 유저
SELECT 
    COUNT(DISTINCT USER_UUID) AS ALL_USERS 
FROM TRIAL_REGISTER;

-- 실제 방문 유저
SELECT 
    COUNT(DISTINCT USER_UUID) AS VISTIORS_COUNT
FROM TRIAL_VISIT_INFO;

-- 전체 신청 사용자 대비 결제 사용자 비율
SELECT 
    CONCAT(ROUND((SELECT 
                        COUNT(DISTINCT USER_UUID) 
                    FROM TRIAL_PAYMENT 
                    WHERE IS_PAYMENT = 1) / COUNT(DISTINCT USER_UUID), 2) * 100, '%') 
                    AS CONVERSION_RATIO
FROM TRIAL_PAYMENT;

-- 방문 유저 중 결제한 비율
SELECT 
    CONCAT(ROUND((SELECT 
        COUNT(DISTINCT USER_UUID) 
            FROM TRIAL_PAYMENT AS TR JOIN 
                (SELECT DISTINCT USER_UUID AS USER_UUID FROM TRIAL_VISIT_INFO) AS UV
                USING(USER_UUID)
                WHERE IS_PAYMENT = 1) / COUNT(DISTINCT USER_UUID), 2) * 100, '%') AS RATIO
FROM TRIAL_VISIT_INFO;


-- 중복 신청한 아이디 확인하기
SELECT USER_UUID, COUNT(USER_UUID)
FROM TRIAL_REGISTER_BACKUP
GROUP BY USER_UUID
HAVING COUNT(*) > 1;

-- 중복 제거한 결과를 담을 임시 테이블 생성 (가장 최근 일자의 데이터만 남기기)
CREATE TABLE TRIAL_REGISTER_deduped LIKE TRIAL_REGISTER;
ALTER TABLE TRIAL_REGISTER_deduped 
    ADD COLUMN `RN` INT;
INSERT INTO TRIAL_REGISTER_deduped
  (user_uuid, trial_date, RN)
SELECT USER_UUID,
        TRIAL_DATE,
        ROW_NUMBER() OVER(PARTITION BY USER_UUID ORDER BY TRIAL_DATE DESC) AS RN
    FROM TRIAL_REGISTER;

--  데이터 삭제
DELETE 
FROM TRIAL_REGISTER_deduped 
WHERE RN = 2;

-- 테이블명 변경
RENAME TABLE TRIAL_REGISTER TO TRIAL_REGISTER_BACKUP,
        TRIAL_REGISTER_deduped TO TRIAL_REGISTER;


-- NULL 값 확인하기
SELECT 
    SUM(FIRST_ENTER_TIME IS NULL) AS FIRST_NULL,
    SUM(LAST_LEAVE_TIME IS NULL) AS LAST_NULL
FROM TRIAL_VISIT_INFO;

-- TRIAL_VISIT_INFO NULL 값 제외한 것만 뽑아내기
SELECT * 
FROM TRIAL_VISIT_INFO
WHERE FIRST_ENTER_TIME IS NOT NULL 
    AND LAST_LEAVE_TIME IS NOT NULL;

-- 사용자별 최초 방문 일자
SELECT 
    USER_UUID, 
    MIN(DATE) AS FIRST_VISIT
FROM TRIAL_VISIT_INFO
GROUP BY USER_UUID
ORDER BY FIRST_VISIT;

-- 사용자별 무료 체험 간 지점 방문 횟수 (1일 기준)
SELECT 
    USER_UUID,
    COUNT(DATE) AS VISIT_COUNT
FROM TRIAL_VISIT_INFO
GROUP BY USER_UUID
ORDER BY VISIT_COUNT DESC;

-- 최초 등록 후 방문한 날까지 소요된 시간
SELECT 
    USER_UUID, 
    MIN(DATE) AS FIRST_VISIT
FROM TRIAL_VISIT_INFO
GROUP BY USER_UUID
ORDER BY FIRST_VISIT;

-- 등록일 및 첫 방문일 차이
SELECT 
    TR.USER_UUID,
    DATEDIFF(FIRST_VISIT, TRIAL_DATE) AS DIFFERENCE
FROM TRIAL_REGISTER AS TR, (SELECT 
                                USER_UUID, 
                                MIN(DATE) AS FIRST_VISIT
                                FROM TRIAL_VISIT_INFO
                                GROUP BY USER_UUID
                                ORDER BY FIRST_VISIT) AS FD
WHERE TR.USER_UUID = FD.USER_UUID;